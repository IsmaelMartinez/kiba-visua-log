#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

echo "Please provide the type of changes you are going to push"

# Read user input, assign stdin to keyboard
exec < /dev/tty

while read -p "Is this a breaking change? (y/N) " yn; do
    case $yn in
        [Yy] ) bumpversion mayor; exit 0;;
        * ) break;;
	esac
done
while read -p "Are you fixing a bug? (y/N) " yn; do
    case $yn in
        [Yy] ) bumpversion minor; exit 0;;
        * ) break;;
    esac
done
while read -p "Is this a new feature? (y/N) " yn; do
    case $yn in
        [Yy] ) bumpversion minor; exit 0;;
        * ) break;;
    esac
done
while read -p "Is this a PR change? (Y/n) " yn; do
    case $yn in
        [Nn] ) echo "Well, then what are you changing?"; exit 1;;
        * ) exit 0;;
    esac
done

exec <&-